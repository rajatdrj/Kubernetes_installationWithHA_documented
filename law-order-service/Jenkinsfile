pipeline {
    agent any

    options {
        timestamps() // Add timestamps to the console output
    }

    stages {
        stage('Pull Code from GitLab') {
            steps {
                git url: 'http://10.70.230.137/nikhil_jain/law-order-service.git', credentialsId: 'GitLabCredentials', branch: 'cloud_production_release'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn install'
            }
        post {
                success {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'good', iconEmoji: '(Y)', message: """Successful build for ${env.JOB_NAME} ${env.BUILD_NUMBER}  is complete.""", teamDomain: 'https://scrbjaipur.slack.com', tokenCredentialId: 'slack-cctns'
                }
                failure {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'danger', iconEmoji: ':-1:', message: """Failed build for ${env.JOB_NAME} ${env.BUILD_NUMBER}', teamDomain: 'https://scrbjaipur.slack.com""", tokenCredentialId: 'slack-cctns'
                }
                unstable {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'warning', iconEmoji: ':warning:', message: """Unstable build for ${env.JOB_NAME} ${env.BUILD_NUMBER}', teamDomain: 'https://scrbjaipur.slack.com""", tokenCredentialId: 'slack-cctns'
                }
            }
        }

stage('Copy JAR to Server') {
    steps {
        script {
            // Use scp command with specified SSH credentials to copy the JAR file to another server
            sshCredentials = 'ssh69' // Specify the ID of the SSH credentials to use

            sh "scp -i /root/.ssh/id_rsa target/*.jar root@172.21.90.69:/home/cctns_microservices_k8s/microservices/law-order-service/law-order-service-production_release/target/psa-law-order-service-0.0.1-SNAPSHOT.jar"
        }
    }
}


        stage('Build docker Image') {
            steps {
                script {
                    // Use ssh command to run Docker commands on the remote server
                    // Example: ssh root@remote_server 'docker command'
                    sshScript = """
                        ssh root@172.21.90.69 'cd /home/cctns_microservices_k8s/microservices/law-order-service/law-order-service-production_release/ && docker build -t docker-registry:5000/psa-law-order-server:v1-${env.BUILD_NUMBER} . --no-cache'
                        """
                    sh sshScript
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    // Use ssh command to run Docker commands on the remote server
                    // Example: ssh root@remote_server 'docker command'
                    sshScript = """
                        ssh root@172.21.90.69 'docker push docker-registry:5000/psa-law-order-server:v1-${env.BUILD_NUMBER}'
                    """
                    sh sshScript
                }
            }
        }
        
               stage('Deploy Application') {
            steps {
                script {
                    // Use ssh command to run Docker commands on the remote server
                    // Example: ssh root@remote_server 'docker command'
                    sshScript = """
                             ssh root@172.21.90.69 'kubectl set image deployment/psa-law-order-server-app -n cctns-new law-order-app=docker-registry:5000/psa-law-order-server:v1-${env.BUILD_NUMBER}'
                             sleep 30
                             ssh root@172.21.90.69 'kubectl rollout status deployment/psa-law-order-server-app -n cctns-new'
                             """
                            sh sshScript

                }
            }
        }  
       
    }
post {
                success {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'good', iconEmoji: '(Y)', message: """Successful build for ${env.JOB_NAME} ${env.BUILD_NUMBER}  is complete.""", teamDomain: 'https://scrbjaipur.slack.com', tokenCredentialId: 'slack-cctns'
                }
                failure {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'danger', iconEmoji: ':-1:', message: """Failed build for ${env.JOB_NAME} ${env.BUILD_NUMBER}', teamDomain: 'https://scrbjaipur.slack.com""", tokenCredentialId: 'slack-cctns'
                }
                unstable {
                    slackSend botUser: true, channel: '#jenkins-build', color: 'warning', iconEmoji: ':warning:', message: """Unstable build for ${env.JOB_NAME} ${env.BUILD_NUMBER}', teamDomain: 'https://scrbjaipur.slack.com""", tokenCredentialId: 'slack-cctns'
                }
            }
        }