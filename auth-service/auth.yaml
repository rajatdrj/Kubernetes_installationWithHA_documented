apiVersion: v1
kind: ConfigMap
metadata:
  name: psa-auth-cm
  namespace: cctns-new
data:
  auth_server_address: psa-auth-svc.cctns-new.svc.cluster.local

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: auth-app
  name: psa-auth-server-app
  namespace: cctns-new
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-app
  template:
    metadata:
      labels:
        app: auth-app
    spec:
      containers:
      - env:
        - name: CONFIG_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: config_server_address
              name: psa-config-cm
        - name: auth_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: auth_server_address
              name: psa-auth-cm
        - name: EUREKA_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: eureka_server_address
              name: psa-eureka-cm
        - name: APPLICATION_SERVER
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ACTIVE_PROFILE
          valueFrom:
            configMapKeyRef:
              key: ACTIVE_PROFILE
              name: active-profile
        - name: TZ
          value: Asia/Kolkata
        image: docker-registry:5000/psa-auth-server:v1
        imagePullPolicy: Always
        name: auth-app
        ports:
        - containerPort: 8079
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 700Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /root/logs
          name: logs-volume
      serviceAccount: cctns
      serviceAccountName: cctns
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /Data_NAS_NEW/microservice-log/auth
          type: ""
        name: logs-volume
        
---

apiVersion: v1
kind: Service
metadata:
  name: psa-auth-svc
  namespace: cctns-new
spec:
  ports:
  - name: http
    nodePort: 31003
    port: 8079
    protocol: TCP
    targetPort: 8079
  selector:
    app: auth-app
  type: NodePort
